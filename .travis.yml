language: android
sudo: required

before_cache:
  # Do not cache a few Gradle files/directories (see https://docs.travis-ci.com/user/languages/java/#Caching)
  - rm -f  $HOME/.gradle/caches/modules-2/modules-2.lock
  - rm -fr $HOME/.gradle/caches/*/plugin-resolution/

cache:
  directories:
    # Android SDK
    - $HOME/android-sdk-dl
    - $HOME/android-sdk

    # Gradle dependencies
    - $HOME/.gradle/caches/
    - $HOME/.gradle/wrapper/

    # Android build cache (see http://tools.android.com/tech-docs/build-cache)
    - $HOME/.android/build-cache

    # Node modules
    - node_modules

    # Maven cache
    - $HOME/.m2

    # Gcloud
    - $HOME/google-cloud-sdk

before_install:
  - sudo apt-get install python-pip -y
  - sudo easy_install Pillow==6.2.2
  - pyenv install 3.6.3
  - pyenv install 2.7.11
  - pyenv global 3.6.3
  - openssl aes-256-cbc -K $encrypted_64bd6e5c0667_key -iv $encrypted_64bd6e5c0667_iv -in gcloud-service-key.json.enc -out $HOME/gcloud-service-key.json -d
  - if [ ! -d "$HOME/google-cloud-sdk/bin" ]; then rm -rf $HOME/google-cloud-sdk; export $CLOUDSDK_CORE_DISABLE_PROMPTS; curl https://sdk.cloud.google.com | bash; fi
  - source /home/travis/google-cloud-sdk/path.bash.inc # Add gcloud to $PATH
  - gcloud version
  - gcloud config set project api-project-768202461730
  - gcloud auth activate-service-account --key-file $HOME/gcloud-service-key.json
  - chmod +x gradlew
  - nvm install
  - nvm use
  - npm install -g greenkeeper-lockfile
  - yes | sdkmanager "platforms;android-"$ANDROID_API_LEVEL

install:
  - npm install

android:
  components:
    - tools
    - platform-tools
    - tools
    - build-tools-$ANDROID_BUILD_TOOLS_VERSION
    - android-$ANDROID_API_LEVEL
    - android-$ANDROID_MIN_SDK_LEVEL

before_script:
  - greenkeeper-lockfile-update

script:
  - set -e
  - npm run danger
  - npm run build
  - ./scripts/check-pristine-state package-lock.json sd.img
  - 'if [[ -n "$TRAVIS_TAG" ]]; then ./scripts/build-docs-ci $TRAVIS_TAG; fi'

  # Assemble test apps
  - ./gradlew :app:assembleOssDebug :app:assembleOssDebugAndroidTest :Backpack:assembleOssDebugAndroidTest :app:ktlint :Backpack:ktlint -PdisablePreDex

  # Call firebase builds. TODO: do in parallel
  - TEST_METHOD=connected ./scripts/ci-tests.sh
  - sudo TEST_METHOD=screenshot ./scripts/ci-tests.sh

  - |
    if [ "$TRAVIS_BRANCH" == 'master' ] && [ "$TRAVIS_PULL_REQUEST" == 'false' ]; then
      openssl aes-256-cbc -K $encrypted_8363dc54ada0_key -iv $encrypted_8363dc54ada0_iv -in backpack.android.demo.key.enc -out backpack.android.demo.key -d;
      ./gradlew app:assembleOssRelease && curl -F ipa=@app/build/outputs/apk/oss/release/app-oss-release.apk -F status=2 -F strategy=replace -H X-HockeyAppToken:$HOCKEYAPP_TOKEN https://rink.hockeyapp.net/api/2/apps/upload;
      ./scripts/trigger-rn-build.sh;
    fi

after_script:
  - greenkeeper-lockfile-upload
  - chmod +x notify.sh
  - if [ "$TRAVIS_PULL_REQUEST" != 'false' ]; then sh notify.sh $BACKPACK_BOT_COMMENT_TOKEN $TRAVIS_REPO_SLUG $TRAVIS_PULL_REQUEST $TRAVIS_COMMIT; fi
  - 'if [ "$TRAVIS_BRANCH" == master ] && [ "$TRAVIS_PULL_REQUEST" == false ]; then curl -s -X POST -H "Content-Type: application/json" -H "Accept: application/json" -H "Travis-API-Version: 3" -H "Authorization: token $TRAVIS_API_KEY" -d "{\"request\": {\"branch\":\"master\"}}" https://api.travis-ci.org/repo/Skyscanner%2Fbackpack-docs/requests; fi'

branches:
  only:
    - master
    - /^greenkeeper/.*$/
    - /^[0-9]+\.[0-9]+\.[0-9]+$/

deploy:
  provider: pages
  skip_cleanup: true
  github_token: $ANDROID_DOCS_DEPLOY_TOKEN
  on:
    tags: true
    all_branches: true
  local_dir: dist
  detect_encoding: true
  repo: backpack/android
  target-branch: master
  verbose: true
  keep-history: true

env:
  global:
    - CLOUDSDK_CORE_DISABLE_PROMPTS=1
    - ANDROID_API_LEVEL=29
    - ANDROID_MIN_SDK_LEVEL=21
    - EMULATOR_API_LEVEL=21
    - ANDROID_BUILD_TOOLS_VERSION=29.0.2
    - ANDROID_SDK_ROOT=/usr/local/android-sdk/
    - secure: hk/2CFZ56m4S/ngueKlt5pkgqkVkYbA/PqIWlSH7BDMAuM3zR4ulZc1176kpllZiIKWEIjdmNRIgGGAb0BI3lEkzOpGCLhpdRRItGh+D3s+I33F5futjnFRYaIgaTOEZD8AQPwXeFoPCDb7UFxOWcLTQOgR9anXZs+XPGhwlEWmYGlumo6HgY69Bx1NCchqHsIzPptpGBs+rfd7Xa7qJYfunrXyJ0EbshoGC5EFpCxzqzjKw5UkBBWXbvY7E01dY4CuwBEfoP0DpN/vX2nLVZ5mxzRLHhC068VMHtmwBGbee+EaGlYfHnB8jU7plV3MUkSfhgwQnS+hq/uhHNoukitlgvHfOzHWOPF5Zw1nELYDLZOP0mqoHmyFbHCynBt6ztWXupyJdknT0eTT2Kk9lsRRm7Ut2lm2OrFUxhasERHIJ5i25rUEF+n16QSNmPKILDVP/4PuD673QGi9ow3rwIyXoYojg7bTEyMNGVs78lRrP4UDdLtgLc7tT0GXRakoPVarHJSN9hmQXmB4061wSzZZiVe8TFN6tKNWCP6DA/otSTU+DsoyA6wpNM9NbVes5JTPOVJ11jigFrr/WMv9l8dyVDRpVbBDzM+LqWAbzfvdBJLOCTYugDZRzU8SxEJY7w8/4i7g6UYzBlGpEi1bU4gjuI+mq3UTRw5ySMKegEuc=
