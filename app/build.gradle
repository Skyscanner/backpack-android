apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'com.facebook.testing.screenshot'

def properties = new Properties()
if (rootProject.file("local.properties").exists()) {
  properties.load(rootProject.file("local.properties").newDataInputStream())
}

android {
  compileSdkVersion rootProject.ext.compileSdkVersion
  buildToolsVersion rootProject.ext.buildToolsVersion

  defaultConfig {
    applicationId 'net.skyscanner.backpack'
    minSdkVersion rootProject.ext.minSdkVersion
    targetSdkVersion rootProject.ext.targetSdkVersion
    versionCode 1
    versionName rootProject.ext.version

    testInstrumentationRunner "net.skyscanner.backpack.BpkTestRunner"
    testInstrumentationRunnerArgument "notClass", "net.skyscanner.backpack.docs.GenerateScreenshots"

    manifestPlaceholders = [ MAPS_API_KEY : properties.getProperty("MAPS_API_KEY", "") ]
  }

  signingConfigs {
    release {
      storeFile rootProject.file('backpack.android.demo.key')
      storePassword properties.getProperty('KEYSTORE_PASSWORD')
      keyAlias properties.getProperty('KEYSTORE_ALIAS')
      keyPassword properties.getProperty('KEYSTORE_ALIAS_PASSWORD')
    }
  }
  buildTypes {
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
      signingConfig signingConfigs.release
    }
  }
  lintOptions {
    // Backups not required for demo app
    disable 'AllowBackup',
      // Gradle dependencies to be in sync with app
      'GradleDependency',
      // App indexing not required for demo app
      'GoogleAppIndexingWarning',
      // A11y support TBD
      'ContentDescription'
  }
  flavorDimensions "version"
  productFlavors {
    oss {
      dimension "version"
    }
    internal {
      dimension "version"
    }
  }
  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }
}

dependencies {
  implementation fileTree(include: ['*.jar'], dir: 'libs')
  implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
  implementation "androidx.appcompat:appcompat:$rootProject.ext.androidxAppCompat"
  implementation "androidx.annotation:annotation:$rootProject.ext.androidxAnnotations"
  implementation "androidx.legacy:legacy-support-v4:$rootProject.ext.androidXLegacy"
  implementation "androidx.constraintlayout:constraintlayout:$rootProject.ext.constraintLayout"
  implementation "com.google.android.material:material:$rootProject.ext.androidMaterial"
  implementation "com.jakewharton.threetenabp:threetenabp:$rootProject.ext.threeTenAbp"
  implementation "com.squareup.picasso:picasso:$rootProject.ext.picasso"
  implementation "com.google.android.gms:play-services-maps:$rootProject.ext.googleMaps"
  testImplementation "junit:junit:$rootProject.ext.junit"
  implementation "com.facebook.stetho:stetho:$rootProject.ext.stetho"
  androidTestImplementation "androidx.test.ext:junit:$rootProject.ext.junitAndroid"
  androidTestImplementation "androidx.test.espresso:espresso-core:$rootProject.ext.espressoCore"
  androidTestImplementation "com.android.support.test.espresso:espresso-contrib:$rootProject.ext.espressoContrib"
  androidTestImplementation "androidx.test:rules:$rootProject.ext.testRules"
  api project(':Backpack')
}
screenshots {
  multipleDevices false
  if (!project.hasProperty("localTests") || localTests == false) {
    referenceDir "app/build/test-labs-screenshots/screenshots-default"
  }
}
