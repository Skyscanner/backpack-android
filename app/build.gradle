apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'com.facebook.testing.screenshot'

def properties = new Properties()
properties.putAll(System.getenv())
if (rootProject.file("local.properties").exists()) {
  properties.load(rootProject.file("local.properties").newDataInputStream())
}

android {
  compileSdkVersion rootProject.ext.compileSdkVersion

  defaultConfig {
    applicationId 'net.skyscanner.backpack'
    minSdkVersion rootProject.ext.minSdkVersion
    targetSdkVersion rootProject.ext.targetSdkVersion
    versionCode 1
    versionName rootProject.ext.version

    testInstrumentationRunner "net.skyscanner.backpack.BpkTestRunner"
    testInstrumentationRunnerArgument "notClass", "net.skyscanner.backpack.docs.GenerateScreenshots"

    manifestPlaceholders = [ MAPS_API_KEY : properties.getProperty("MAPS_API_KEY", "") ]
  }

  signingConfigs {
    release {
      storeFile rootProject.file('backpack.android.demo.key')
      storePassword properties.getProperty('KEYSTORE_PASSWORD')
      keyAlias properties.getProperty('KEYSTORE_ALIAS')
      keyPassword properties.getProperty('KEYSTORE_ALIAS_PASSWORD')
    }
  }
  buildTypes {
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
      signingConfig signingConfigs.release
    }
  }
  flavorDimensions "version"
  productFlavors {
    oss {
      dimension "version"
      versionNameSuffix "-oss"
    }
    internal {
      dimension "version"
      versionNameSuffix "-internal"
    }
  }
  lintOptions {
    baseline file("lint-baseline.xml")
    lintConfig file("../lint.xml")
    checkReleaseBuilds false // we're already running lint separately
    warningsAsErrors true
  }
  testOptions {
    animationsDisabled = true
  }
  flavorDimensions "version"
  productFlavors {
    oss {
      dimension "version"
    }
    internal {
      dimension "version"
    }
  }
  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }
  kotlinOptions {
    jvmTarget = JavaVersion.VERSION_1_8.toString()
    freeCompilerArgs += [
      "-Xopt-in=kotlin.RequiresOptIn",
    ]
  }
}

dependencies {
  implementation fileTree(include: ['*.jar'], dir: 'libs')
  implementation "com.squareup.picasso:picasso:$rootProject.ext.picasso"
  testImplementation "junit:junit:$rootProject.ext.junit"
  implementation "com.facebook.stetho:stetho:$rootProject.ext.stetho"
  androidTestImplementation "androidx.test.ext:junit:$rootProject.ext.junitAndroid"
  androidTestImplementation "androidx.test.espresso:espresso-core:$rootProject.ext.espressoCore"
  androidTestImplementation "com.android.support.test.espresso:espresso-contrib:$rootProject.ext.espressoContrib"
  androidTestImplementation "androidx.test:rules:$rootProject.ext.testRules"
  implementation project(':Backpack')
}
screenshots {
  multipleDevices false
  def variant = project.gradle.startParameter.projectProperties.get("android.testInstrumentationRunnerArguments.variant")
  if (variant == null || variant.isEmpty()) {
    variant = "default"
  }
  recordDir = "screenshots/$variant"
}
