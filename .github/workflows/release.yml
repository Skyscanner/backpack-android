name: Release

on:
  release:
    types: [ published ]

defaults:
  run:
    shell: bash -l {0}

env:
  flavour: oss

jobs:

  Build:
    name: Build
    permissions:
      statuses: write
      pull-requests: write
      contents: write
    uses: ./.github/workflows/_build.yml
    secrets:
      GH_APP_PRIVATE_KEY: ${{ secrets.GH_APP_PRIVATE_KEY }}

  Deploy:
    name: Deploy
    runs-on: ubuntu-24.04-16cores-public
    environment: Publishing
    needs: [Build]
    timeout-minutes: 30
    permissions:
        contents: write
        packages: write

    steps:

      - uses: actions/create-github-app-token@v2
        id: app-token
        with:
          app-id: ${{ vars.GH_APP_ID }}
          private-key: ${{ secrets.GH_APP_PRIVATE_KEY }}

      - name: Checkout
        uses: actions/checkout@v5

      - name: Set up JDK
        uses: actions/setup-java@v5
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Building release APK
        run: |
          openssl aes-256-cbc -K $KEYSTORE_DECRYPT_KEY -iv $KEYSTORE_DECRYPT_IV -in backpack.android.demo.key.enc -out backpack.android.demo.key -d;
          ./gradlew :app:assemble${{ env.flavour }}Release -PdisablePreDex
        env:
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEYSTORE_ALIAS: ${{ secrets.KEYSTORE_ALIAS }}
          KEYSTORE_ALIAS_PASSWORD: ${{ secrets.KEYSTORE_ALIAS_PASSWORD }}
          MAPS_API_KEY: ${{ secrets.MAPS_API_KEY }}
          KEYSTORE_DECRYPT_KEY: ${{ secrets.KEYSTORE_DECRYPT_KEY }}
          KEYSTORE_DECRYPT_IV: ${{ secrets.KEYSTORE_DECRYPT_IV }}

      - name: Publish artifacts
        run: ./gradlew publish -Pversion=${{ github.event.release.tag_name }}
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Install libsecret for Supernova CLI
        run: sudo apt-get update && sudo apt-get install -y libsecret-1-0

      - name: Update Supernova docs
        run: npx @supernovaio/cli publish-documentation --apiKey=${{ secrets.SUPERNOVA_API_KEY }} --designSystemId=${{ secrets.SUPERNOVA_DESIGN_SYSTEM_ID }}

      - name: Publish release to Runway
        run: |
          set -e
          curl -X POST -F "file=@app/build/outputs/apk/oss/release/app-${{ env.flavour }}-release.apk" -H "X-API-KEY:${RUNWAY_API_KEY}" https://upload-api.runway.team/v1/app/${RUNWAY_APP_ID}/bucket/${RUNWAY_BUCKET_ID}/build
        env:
          RUNWAY_API_KEY: ${{ secrets.RUNWAY_API_KEY }}
          RUNWAY_APP_ID: ${{ secrets.RUNWAY_APP_ID }}
          RUNWAY_BUCKET_ID: ${{ secrets.RUNWAY_BUCKET_ID }}
