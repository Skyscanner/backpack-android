name: CI

on:
  push:
    branches: [master]
    tags: ['*.*.*']
  pull_request:
    branches: [master]

defaults:
  run:
    shell: bash -l {0}

jobs:

  Emulator:
    name: Android
    runs-on: macos-latest

    strategy:
      fail-fast: false
      matrix:
        api-level:
          - 21
        flavour:
          - Oss
        config:
          - Debug

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install Python
        uses: "gabrielfalcao/pyenv-action@v7"
        with:
          default: 2.7.18
          versions: 2.7.18

      - name: Android Tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          script: ./gradlew :Backpack:connected${{ matrix.flavour }}${{ matrix.config }}AndroidTest

      - name: Screenshot Tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          script: ./gradlew :app:verify${{ matrix.flavour }}${{ matrix.config }}AndroidTestScreenshotTest

  Java:
    name: Java
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        flavour:
          - Oss
        config:
          - Debug
        module:
          - Backpack
          - app

    steps:
      - uses: actions/checkout@v2

      - name: Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: Kotlin Lint
        run: ./gradlew :${{ matrix.module }}:ktlint -PdisablePreDex

      - name: Android Lint
        run: ./gradlew :${{ matrix.module }}:lint${{ matrix.flavour }}${{ matrix.config }} -PdisablePreDex

      - name: Build
        run: ./gradlew :${{ matrix.module }}:assemble${{ matrix.flavour }}${{ matrix.config }} -PdisablePreDex

      - name: Unit Tests
        run: ./gradlew :${{ matrix.module }}:test${{ matrix.flavour }}${{ matrix.config }}UnitTest -PdisablePreDex

  Node:
    name: Node
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Setup NVM
        run: nvm install

      - name: NPM CI
        run: |
          nvm use
          npm ci

      - name: Danger check
        run: npm run danger
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Tokens check
        run: ./scripts/check-pristine-state package-lock.json sd.img

      - name: Build
        run: npm run build

