name: CI

on:
  push:
    branches: [main]
    tags: ['*.*.*']
  pull_request:
    branches: [main]

defaults:
  run:
    shell: bash -l {0}

env:
  flavour: Oss
  config: Debug
  api-level: 21

jobs:

  Node:
    name: Node
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Setup NPM
        run: |
          nvm install
          npm install --global gulp-cli

      - name: NPM CI
        run: |
          nvm use
          npm ci

      - name: ESLint check
        run: npm run lint

      - name: Danger check
        run: npm run danger
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build
        run: npm run build

      - name: Tokens check
        run: |
          gulp
          ./scripts/check-no-changes.sh

  Java:
    name: Java
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        module:
          - app
          - Backpack

    steps:
      - uses: actions/checkout@v2

      - name: Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: Build
        run: ./gradlew :${{ matrix.module }}:assemble${{ env.flavour }}${{ env.config }} -PdisablePreDex

      - name: KtLint check
        run: ./gradlew :${{ matrix.module }}:${{ env.module }}:ktlint -PdisablePreDex

      - name: Lint check
        run: ./gradlew :${{ matrix.module }}:lint${{ env.flavour }}${{ env.config }} -PdisablePreDex

      - name: Unit Tests
        run: ./gradlew :${{ matrix.module }}:test${{ env.flavour }}${{ env.config }}UnitTest -PdisablePreDex

  Android:
    name: Android
    runs-on: macos-latest

    strategy:
      fail-fast: false
      matrix:
        module:
          - app
          - Backpack

    steps:

      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '2.x'

      - name: Android Tests
        if: ${{ matrix.module == 'Backpack' }}
        uses: reactivecircus/android-emulator-runner@v2
        with:
          target: google_apis
          profile: Nexus 4
          sdcard-path-or-size: 512M
          api-level: ${{ env.api-level }}
          script: ./gradlew :${{ matrix.module }}:connected${{ env.flavour }}${{ env.config }}AndroidTest

      - name: Screenshot Tests
        if: ${{ matrix.module == 'app' }}
        uses: reactivecircus/android-emulator-runner@v2
        with:
          target: google_apis
          profile: Nexus 4
          sdcard-path-or-size: 512M
          api-level: ${{ env.api-level }}
          script: |
            sudo easy_install Pillow==6.2.2
            ./gradlew :${{ matrix.module }}:record${{ env.flavour }}${{ env.config }}AndroidTestScreenshotTest
            ./scripts/check-no-changes.sh

  Deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: [Node, Java, Android]

    steps:

      - name: Checkout
        uses: actions/checkout@v2

      - name: Add commit comment
        # Only run if there is no tag, and the commit is not on main
        if: contains('refs/tags/', github.ref) != true && github.ref != 'refs/heads/main'
        uses: peter-evans/commit-comment@v1
        with:
          body: |
            Thank you for your contribution.
            You can use the following dependency to test your application while we review your pull request:

            `com.github.Skyscanner:backpack-android:${{ github.sha }}`

      - name: Get release tag
        if: contains('refs/tags/', github.ref)
        id: tag
        uses: dawidd6/action-get-tag@v1

      - name: Build Dokka Docs
        if: contains('refs/tags/', github.ref)
        run: |
          nvm install
          nvm use
          set -e
          ./scripts/build-docs-ci ${{steps.tag.outputs.tag}}

      - name: Deploy Docs Site
        if: github.ref == 'refs/heads/main'
        run: |
          curl -f -s -X POST -H "Content-Type: application/json" -H "Accept: application/vnd.github.v3+json" -H "Authorization: token $GITHUB_TOKEN" -d "{\"ref\":\"main\",\"inputs\":{\"repo\":\"backpack-android\"}}" https://api.github.com/repos/Skyscanner/backpack-docs/actions/workflows/ci.yml/dispatches
        env:
          GITHUB_TOKEN: ${{ secrets.BACKPACK_DOCS_DEPLOY_TOKEN }}

#      No need for now - need to create AppCenter app first
#      - name: Building release APK
#        run: |
#          openssl aes-256-cbc -K $encrypted_8363dc54ada0_key -iv $encrypted_8363dc54ada0_iv -in backpack.android.demo.key.enc -out backpack.android.demo.key -d;
#          ./gradlew :app:assemble${{ env.flavour }}Release -PdisablePreDex
#
#      - name: Publish APK to AppCenter
#        if: github.ref == 'refs/heads/main'
#        uses: wzieba/AppCenter-Github-Action@v1
#          with:
#            appName: Skyscanner/Backpack-Android
#            token: ${{secrets.APP_CENTER_TOKEN}}
#            group: Testers
#            file: app/build/outputs/apk/oss/release/app-oss-release.apk
#            notifyTesters: false
#            debug: false
