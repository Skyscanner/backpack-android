name: PR

on:
  pull_request:
    branches: [ main ]

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash -l {0}

jobs:

  Build:
    name: Build
    permissions:
      statuses: write
      pull-requests: write
      contents: write
    uses: ./.github/workflows/_build.yml
    with:
      figma_enabled: true
    secrets:
      GH_APP_PRIVATE_KEY: ${{ secrets.GH_APP_PRIVATE_KEY }}
      FIGMA_ACCESS_TOKEN: ${{ secrets.FIGMA_ACCESS_TOKEN }}

  Dependabot:
    runs-on: ubuntu-24.04-16cores-public
    permissions:
      pull-requests: write
    if: ${{ github.actor == 'dependabot[bot]' }}
    steps:
      - uses: actions/create-github-app-token@v2
        id: app-token
        with:
          app-id: ${{ vars.GH_APP_ID }}
          private-key: ${{ secrets.GH_APP_PRIVATE_KEY }}

      - name: Fetch Dependabot metadata
        id: dependabot-metadata
        uses: dependabot/fetch-metadata@v2.4.0
        with:
          github-token: "${{ steps.app-token.outputs.token }}"

      - name: Add bpk label
        if: contains(steps.dependabot-metadata.outputs.dependency-names, 'bpk-')
        run: gh pr edit "$PR_URL" --add-label "bpk" --remove-label "javascript"
        env:
          GITHUB_TOKEN: ${{ steps.app-token.outputs.token }}
          PR_URL: ${{github.event.pull_request.html_url}}

  TestFigmaCodeConnect:
    runs-on: ubuntu-24.04-16cores-public
    steps:
      - uses: actions/checkout@v4

      - name: Install Figma Code Connect
        run: npm install -g @figma/code-connect

      - name: Test Figma Code Connect Publish
        run: |
          if find backpack-compose/src/main/kotlin -name "*.figma.kt" -type f | grep -q .; then
            echo "🔍 Found Code Connect files, testing publish..."
            npx figma connect publish
          else
            echo "No Code Connect files found, skipping test"
          fi
        env:
          FIGMA_ACCESS_TOKEN: ${{ secrets.FIGMA_ACCESS_TOKEN }}

  CopilotAgent:
    runs-on: ubuntu-24.04-16cores-public
    permissions:
      pull-requests: write
    steps:
      - uses: actions/create-github-app-token@v2
        id: app-token
        with:
          app-id: ${{ vars.GH_APP_ID }}
          private-key: ${{ secrets.GH_APP_PRIVATE_KEY }}

      - name: Detect Copilot commits and label PR
        uses: actions/github-script@v8
        with:
          github-token: ${{ steps.app-token.outputs.token }}
          script: |
            const { data: commits } = await github.rest.pulls.listCommits({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number
            });

            const isCopilot = commits.some(commit => {
              const authorLogin = commit.author?.login || "";
              const committerLogin = commit.committer?.login || "";
              const message = commit.commit.message || "";

              const hasAuthorCopilot = /copilot/i.test(authorLogin) ||
                                       /copilot/i.test(committerLogin);
              const hasCoAuthorCopilot = /co-authored-by:\s*.*copilot/i.test(message);

              return hasAuthorCopilot || hasCoAuthorCopilot;
            });

            if (isCopilot) {
              await github.rest.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.payload.pull_request.number,
                labels: ['ai: copilot']
              });
            }
