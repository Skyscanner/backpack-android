name: Build

on:
  workflow_call:


defaults:
  run:
    shell: bash -l {0}

env:
  flavour: oss
  config: debug
  api-level: 26

jobs:

  Build:
    name: Build
    runs-on: ubuntu-latest
    timeout-minutes: 30
    permissions:
      statuses: write
      pull-requests: write

    steps:
      - uses: actions/checkout@v3

      - name: Setup NPM
        run: |
          nvm install
          npm install --global gulp-cli
          nvm use
          npm ci

      - name: ESLint check
        run: npm run lint

      - name: Danger check
        run: npm run danger
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'
          cache: gradle

      - name: Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: Build
        run: |
          ./gradlew assemble${{ env.flavour }}${{ env.config }} -PdisablePreDex

      - name: Tokens check
        run: |
          npm run build
          ./scripts/check-no-changes.sh

      - name: KtLint check
        run: ./gradlew ktlint -PdisablePreDex

      - name: Lint check
        run: ./gradlew lint${{ env.flavour }}${{ env.config }} -PdisablePreDex

      - name: Unit Tests
        run: ./gradlew test${{ env.flavour }}${{ env.config }}UnitTest -PdisablePreDex

  Android:
    name: Android tests
    runs-on: macos-latest
    timeout-minutes: 30

    steps:

      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'
          cache: gradle

      - name: AVD cache
        uses: actions/cache@v3
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-${{ env.api-level }}

      - name: create AVD and generate snapshot for caching
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          profile: Nexus 4
          sdcard-path-or-size: 512M
          api-level: ${{ env.api-level }}
          force-avd-creation: false
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: false
          script: echo "Generated AVD snapshot for caching."

      - name: Android Tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          profile: Nexus 4
          sdcard-path-or-size: 512M
          api-level: ${{ env.api-level }}
          force-avd-creation: false
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: true
          script: ./gradlew :Backpack:connected${{ env.config }}AndroidTest :backpack-compose:connected${{ env.config }}AndroidTest :backpack-common:connected${{ env.config }}AndroidTest

  CheckCommitMessage:
    name: Check commit message
    runs-on: ubuntu-latest
    outputs:
      head-commit-message: ${{ steps.get_head_commit_message.outputs.headCommitMsg }}
    steps:
      - name: Get repo
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Print head git commit message
        id: get_head_commit_message
        run: echo "headCommitMsg=$(git show -s --format=%s)" >> $GITHUB_OUTPUT

  Screenshots:
    name: Screenshots tests
    runs-on: macos-latest
    needs: CheckCommitMessage
    permissions:
      pull-requests: write
      issues: write
      contents: write
    timeout-minutes: 30

    strategy:
      fail-fast: false
      matrix:
        variant:
          - default
          - themed
          - rtl
          - dm

    steps:

      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'
          cache: gradle

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
          cache: 'pip'
          cache-dependency-path: 'snapshot-requirements.txt'
      - name: Install Python dependencies
        run: pip3 install -r snapshot-requirements.txt

      - name: AVD cache
        uses: actions/cache@v3
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-${{ env.api-level }}

      - name: create AVD and generate snapshot for caching
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          profile: Nexus 4
          sdcard-path-or-size: 512M
          api-level: ${{ env.api-level }}
          force-avd-creation: false
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: false
          script: echo "Generated AVD snapshot for caching."

      - name: Screenshot Tests
        id: screenshotTests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          profile: Nexus 4
          sdcard-path-or-size: 512M
          api-level: ${{ env.api-level }}
          force-avd-creation: false
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: true
          script: |
            touch logcat.log
            chmod 777 logcat.log
            adb logcat > logcat.log &
            ./gradlew :app:record${{ env.flavour }}${{ env.config }}AndroidTestScreenshotTest -Pandroid.testInstrumentationRunnerArguments.variant=${{ matrix.variant }}

            changedFiles=`git diff --name-only` && echo "CHANGED_FILES=${changedFiles//$'\n'/'%0A'}" >> $GITHUB_OUTPUT

      - name: Check snapshot changes
        id: checkSnapshotChanges
        if: ${{ needs.CheckCommitMessage.outputs.head-commit-message != 'Record snapshots' }}
        run: ./scripts/check-no-changes.sh

      - name: Upload Screenshot Tests Artifact
        if: ${{ failure() }}
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.flavour }}${{ env.config }}-${{ matrix.variant }}-screenshot-test-output
          path: app/build/screenshots${{ env.flavour }}${{ env.config }}AndroidTest/
          retention-days: 5

      - name: Upload Logcat Logs
        if: ${{ failure() }}
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.flavour }}${{ env.config }}-${{ matrix.variant }}-logcat-output
          path: logcat.log
          retention-days: 5

      - name: Notify PR of screenshots changes
        if: ${{ (failure() || needs.CheckCommitMessage.outputs.head-commit-message == 'Record snapshots') && steps.screenshotTests.outputs.CHANGED_FILES != '' }}
        uses: actions/github-script@v6
        with:
          script: |
            var body;
            if ("${{ needs.CheckCommitMessage.outputs.head-commit-message }}" != "Record snapshots") {
              body = `### '${{ matrix.variant }}' files were changed.\nIf these changes are intentional please run \`./scripts/record_screenshot_tests.sh\` locally and commit the changes or add an empty commit with the message 'Record snapshots'.\n\n>'${{ steps.screenshotTests.outputs.CHANGED_FILES }}'`;
            } else {
              body = `### '${{ matrix.variant }}' snapshots were updated. Please verify the changes match the expected layout. \n\n>'${{ steps.screenshotTests.outputs.CHANGED_FILES }}'`;
            }
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            })

      - name: Commit changes
        if: ${{ needs.CheckCommitMessage.outputs.head-commit-message == 'Record snapshots' && steps.screenshotTests.outputs.CHANGED_FILES != '' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git remote set-url origin https://x-access-token:$GITHUB_TOKEN@github.com/${{ github.repository }}
          git add app/screenshots/*
          git diff-index --quiet HEAD || git commit -m "Updated snapshots for '${{ matrix.variant }}'"
          git push origin $(git rev-parse HEAD):GITHUB_HEAD_REF
