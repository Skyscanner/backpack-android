/**
 * Backpack for Android - Skyscanner's Design System
 *
 * Copyright 2018-2021 Skyscanner Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'org.jetbrains.dokka'

apply from: 'dokka.gradle'
apply from: 'gradle-maven-push.gradle'

version = rootProject.ext.version
group = rootProject.ext.group

android {
  compileSdkVersion rootProject.ext.compileSdkVersion

  defaultConfig {
    minSdkVersion rootProject.ext.minSdkVersion
    targetSdkVersion rootProject.ext.targetSdkVersion
    testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
  }
  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }
  kotlinOptions {
    jvmTarget = JavaVersion.VERSION_1_8.toString()
    freeCompilerArgs += [
      "-Xopt-in=kotlin.RequiresOptIn",
      "-Xuse-experimental=net.skyscanner.backpack.util.ExperimentalBackpackApi",
    ]
  }
  lintOptions {
    baseline file("lint-baseline.xml")
    lintConfig file("../lint.xml")
    checkReleaseBuilds false // we're already running lint separately
    warningsAsErrors true
    disable 'UnusedResources' // we're exposing resources for consumers
  }
}

dependencies {
  api rootProject.ext.androidxAnnotations
  api "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
  api rootProject.ext.coroutines
  api rootProject.ext.androidxAppCompat
  api rootProject.ext.androidMaterial
  api rootProject.ext.constraintLayout
  api rootProject.ext.cardView
  api rootProject.ext.threeTenAbpAndroid
  api rootProject.ext.googleMaps
  implementation rootProject.ext.swiperefreshLayout
  implementation rootProject.ext.ktx
  androidTestImplementation rootProject.ext.junitAndroid
  androidTestImplementation rootProject.ext.espressoCore
  androidTestImplementation rootProject.ext.testRules
  androidTestImplementation rootProject.ext.mockitoKotlin
  androidTestImplementation rootProject.ext.mockitoAndroid
  testImplementation rootProject.ext.junit
  testImplementation rootProject.ext.coroutinesTest
  testImplementation rootProject.ext.threeTenAbp

  lintPublish project(':backpack-lint')
  implementation project(':backpack-common')
}

import org.jetbrains.dokka.gradle.DokkaTask

task generateDokkaDocs(type: DokkaTask) {
  def version = rootProject.ext.version

  configure {
    outputDirectory = new File(rootProject.rootDir, "$rootProject.ext.dokkaOutputDir/versions/$version")

    dokkaSourceSets {
      named("main") {
        moduleName = rootProject.name
        reportUndocumented = false
        sourceLink {
          dir = "${project.projectDir}/src/main/java"
          remoteUrl = new URL("https://github.com/Skyscanner/backpack-android/tree/main/${project.name}/src/main/java")
          remoteLineSuffix = "#L"
        }
      }
    }
  }
  dependsOn("generateDokkaStatics")
}

task testOssDebugUnitTest {
  dependsOn("testDebugUnitTest")
}

task lintOssDebug {
  dependsOn("lintDebug")
}
