apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'org.jetbrains.dokka'

apply from: 'dokka.gradle'
apply from: 'gradle-maven-push.gradle'

version = rootProject.ext.version
group = 'net.skyscanner.backpack'

repositories {
  google()
  mavenCentral()
}
android {
  compileSdkVersion rootProject.ext.compileSdkVersion

  defaultConfig {
    minSdkVersion rootProject.ext.minSdkVersion
    targetSdkVersion rootProject.ext.targetSdkVersion
    testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
  }
  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }
  kotlinOptions {
    jvmTarget = JavaVersion.VERSION_1_8.toString()
    freeCompilerArgs += [
      "-Xopt-in=kotlin.RequiresOptIn",
      "-Xuse-experimental=net.skyscanner.backpack.util.ExperimentalBackpackApi",
    ]
  }
  lintOptions {
    baseline file("lint-baseline.xml")
    lintConfig file("../lint.xml")
    checkReleaseBuilds false // we're already running lint separately
    warningsAsErrors true
    disable 'UnusedResources' // we're exposing resources for consumers
  }
}

dependencies {
  api "androidx.annotation:annotation:$rootProject.ext.androidxAnnotations"
  api "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
  api "org.jetbrains.kotlinx:kotlinx-coroutines-android:$rootProject.ext.coroutines"
  api "androidx.appcompat:appcompat:$rootProject.ext.androidxAppCompat"
  api "com.google.android.material:material:$rootProject.ext.androidMaterial"
  api "androidx.constraintlayout:constraintlayout:$rootProject.ext.constraintLayout"
  api "androidx.cardview:cardview:$rootProject.ext.cardView"
  api "com.jakewharton.threetenabp:threetenabp:$rootProject.ext.threeTenAbp"
  api "com.google.android.gms:play-services-maps:$rootProject.ext.googleMaps"
  implementation "androidx.swiperefreshlayout:swiperefreshlayout:$rootProject.ext.swiperefreshLayout"
  implementation "androidx.core:core-ktx:$rootProject.ext.ktx"
  androidTestImplementation "androidx.test.ext:junit:$rootProject.ext.junitAndroid"
  androidTestImplementation "androidx.test.espresso:espresso-core:$rootProject.ext.espressoCore"
  androidTestImplementation "androidx.test:rules:$rootProject.ext.testRules"
  androidTestImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:$rootProject.ext.mockitoKotlin"
  androidTestImplementation "org.mockito:mockito-android:$rootProject.ext.mockitoAndroid"
  testImplementation "junit:junit:$rootProject.ext.junit"
  testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$rootProject.ext.coroutines"
  testImplementation "org.threeten:threetenbp:$rootProject.ext.threeTenAbp"

  lintPublish project(':backpack-lint')
}

import org.jetbrains.dokka.gradle.DokkaTask

task generateDokkaDocs(type: DokkaTask) {
  def version = rootProject.ext.version

  configure {
    outputDirectory = new File(rootProject.rootDir, "$rootProject.ext.dokkaOutputDir/versions/$version")

    dokkaSourceSets {
      named("main") {
        moduleName = rootProject.name
        reportUndocumented = false
        sourceLink {
          dir = "${project.projectDir}/src/main/java"
          remoteUrl = new URL("https://github.com/Skyscanner/backpack-android/tree/main/${project.name}/src/main/java")
          remoteLineSuffix = "#L"
        }
      }
    }
  }
  dependsOn("generateDokkaStatics")
}

task testOssDebugUnitTest {
  dependsOn("testDebugUnitTest")
}

task lintOssDebug {
  dependsOn("lintDebug")
}
