/**
 * Backpack for Android - Skyscanner's Design System
 *
 * Copyright 2018 Skyscanner Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Auto-generated: do not edit
@file:Suppress("RedundantVisibilityModifier","unused")

package net.skyscanner.backpack.compose.tokens

import androidx.compose.ui.graphics.Color
import kotlin.Boolean

public class BpkColors private constructor(
  public val isLight: Boolean,
  public val background: Color,
  public val backgroundAlternative: Color,
  public val backgroundAlternativeSecondary: Color,
  public val backgroundElevation01: Color,
  public val backgroundElevation02: Color,
  public val backgroundElevation03: Color,
  public val backgroundSecondary: Color,
  public val backgroundTertiary: Color,
  public val canvas: Color,
  public val canvasContrast: Color,
  public val coreAccent: Color,
  public val coreEco: Color,
  public val corePrimary: Color,
  public val line: Color,
  public val primary: Color,
  public val statusDangerFill: Color,
  public val statusDangerSpot: Color,
  public val statusSuccessFill: Color,
  public val statusSuccessSpot: Color,
  public val statusWarningFill: Color,
  public val statusWarningSpot: Color,
  public val surfaceContrast: Color,
  public val surfaceDefault: Color,
  public val surfaceElevated: Color,
  public val systemGreen: Color,
  public val systemRed: Color,
  public val textDisabled: Color,
  public val textError: Color,
  public val textLink: Color,
  public val textPrimary: Color,
  public val textPrimaryOnContrast: Color,
  public val textQuaternary: Color,
  public val textSecondary: Color,
  public val textSecondaryOnContrast: Color,
  public val textTertiary: Color,
) {
  internal companion object {
    public fun light(
      background: Color = BpkColor.White,
      backgroundAlternative: Color = BpkColor.SkyGrayTint07,
      backgroundAlternativeSecondary: Color = BpkColor.White,
      backgroundElevation01: Color = BpkColor.White,
      backgroundElevation02: Color = BpkColor.White,
      backgroundElevation03: Color = BpkColor.White,
      backgroundSecondary: Color = BpkColor.SkyGrayTint07,
      backgroundTertiary: Color = BpkColor.White,
      canvas: Color = BpkColor.White,
      canvasContrast: Color = BpkColor.Grey10,
      coreAccent: Color = BpkColor.SkyBlue,
      coreEco: Color = BpkColor.EcoGreen,
      corePrimary: Color = BpkColor.DarkSky,
      line: Color = BpkColor.SkyGrayTint05,
      primary: Color = BpkColor.SkyBlue,
      statusDangerFill: Color = BpkColor.PinkMuted,
      statusDangerSpot: Color = BpkColor.Berry,
      statusSuccessFill: Color = BpkColor.GreenMuted,
      statusSuccessSpot: Color = BpkColor.GreenSpot,
      statusWarningFill: Color = BpkColor.YellowMuted,
      statusWarningSpot: Color = BpkColor.AmberSpot,
      surfaceContrast: Color = BpkColor.DarkSky,
      surfaceDefault: Color = BpkColor.White,
      surfaceElevated: Color = BpkColor.White,
      systemGreen: Color = BpkColor.Monteverde,
      systemRed: Color = BpkColor.Panjin,
      textDisabled: Color = BpkColor.BlackAlpha20,
      textError: Color = BpkColor.Berry,
      textLink: Color = BpkColor.SkyBlue,
      textPrimary: Color = BpkColor.SkyGray,
      textPrimaryOnContrast: Color = BpkColor.White,
      textQuaternary: Color = BpkColor.SkyGrayTint03,
      textSecondary: Color = BpkColor.SkyGrayTint02,
      textSecondaryOnContrast: Color = BpkColor.WhiteAlpha80,
      textTertiary: Color = BpkColor.SkyGrayTint03,
    ) = BpkColors(
        isLight = true,
        background = background,
        backgroundAlternative = backgroundAlternative,
        backgroundAlternativeSecondary = backgroundAlternativeSecondary,
        backgroundElevation01 = backgroundElevation01,
        backgroundElevation02 = backgroundElevation02,
        backgroundElevation03 = backgroundElevation03,
        backgroundSecondary = backgroundSecondary,
        backgroundTertiary = backgroundTertiary,
        canvas = canvas,
        canvasContrast = canvasContrast,
        coreAccent = coreAccent,
        coreEco = coreEco,
        corePrimary = corePrimary,
        line = line,
        primary = primary,
        statusDangerFill = statusDangerFill,
        statusDangerSpot = statusDangerSpot,
        statusSuccessFill = statusSuccessFill,
        statusSuccessSpot = statusSuccessSpot,
        statusWarningFill = statusWarningFill,
        statusWarningSpot = statusWarningSpot,
        surfaceContrast = surfaceContrast,
        surfaceDefault = surfaceDefault,
        surfaceElevated = surfaceElevated,
        systemGreen = systemGreen,
        systemRed = systemRed,
        textDisabled = textDisabled,
        textError = textError,
        textLink = textLink,
        textPrimary = textPrimary,
        textPrimaryOnContrast = textPrimaryOnContrast,
        textQuaternary = textQuaternary,
        textSecondary = textSecondary,
        textSecondaryOnContrast = textSecondaryOnContrast,
        textTertiary = textTertiary,
    )

    public fun dark(
      background: Color = BpkColor.Black,
      backgroundAlternative: Color = BpkColor.Black,
      backgroundAlternativeSecondary: Color = BpkColor.BlackTint01,
      backgroundElevation01: Color = BpkColor.BlackTint01,
      backgroundElevation02: Color = BpkColor.BlackTint02,
      backgroundElevation03: Color = BpkColor.BlackTint03,
      backgroundSecondary: Color = BpkColor.BlackTint01,
      backgroundTertiary: Color = BpkColor.BlackTint02,
      canvas: Color = BpkColor.NightGrey10,
      canvasContrast: Color = BpkColor.NightGrey20,
      coreAccent: Color = BpkColor.NightBlue,
      coreEco: Color = BpkColor.EcoGreen,
      corePrimary: Color = BpkColor.NightSky,
      line: Color = BpkColor.NightGrey30,
      primary: Color = BpkColor.SkyBlueTint01,
      statusDangerFill: Color = BpkColor.NightPink,
      statusDangerSpot: Color = BpkColor.NightBerry,
      statusSuccessFill: Color = BpkColor.NightGreenFill,
      statusSuccessSpot: Color = BpkColor.NightGreenSpot,
      statusWarningFill: Color = BpkColor.NightYellowFill,
      statusWarningSpot: Color = BpkColor.NightYellowSpot,
      surfaceContrast: Color = BpkColor.NightGrey20,
      surfaceDefault: Color = BpkColor.NightGrey20,
      surfaceElevated: Color = BpkColor.NightGrey25,
      systemGreen: Color = BpkColor.Monteverde,
      systemRed: Color = BpkColor.Panjin,
      textDisabled: Color = BpkColor.WhiteAlpha20,
      textError: Color = BpkColor.NightBerry,
      textLink: Color = BpkColor.NightBlue,
      textPrimary: Color = BpkColor.White,
      textPrimaryOnContrast: Color = BpkColor.White,
      textQuaternary: Color = BpkColor.BlackTint06,
      textSecondary: Color = BpkColor.SkyGrayTint04,
      textSecondaryOnContrast: Color = BpkColor.NightGrey40,
      textTertiary: Color = BpkColor.BlackTint06,
    ) = BpkColors(
        isLight = false,
        background = background,
        backgroundAlternative = backgroundAlternative,
        backgroundAlternativeSecondary = backgroundAlternativeSecondary,
        backgroundElevation01 = backgroundElevation01,
        backgroundElevation02 = backgroundElevation02,
        backgroundElevation03 = backgroundElevation03,
        backgroundSecondary = backgroundSecondary,
        backgroundTertiary = backgroundTertiary,
        canvas = canvas,
        canvasContrast = canvasContrast,
        coreAccent = coreAccent,
        coreEco = coreEco,
        corePrimary = corePrimary,
        line = line,
        primary = primary,
        statusDangerFill = statusDangerFill,
        statusDangerSpot = statusDangerSpot,
        statusSuccessFill = statusSuccessFill,
        statusSuccessSpot = statusSuccessSpot,
        statusWarningFill = statusWarningFill,
        statusWarningSpot = statusWarningSpot,
        surfaceContrast = surfaceContrast,
        surfaceDefault = surfaceDefault,
        surfaceElevated = surfaceElevated,
        systemGreen = systemGreen,
        systemRed = systemRed,
        textDisabled = textDisabled,
        textError = textError,
        textLink = textLink,
        textPrimary = textPrimary,
        textPrimaryOnContrast = textPrimaryOnContrast,
        textQuaternary = textQuaternary,
        textSecondary = textSecondary,
        textSecondaryOnContrast = textSecondaryOnContrast,
        textTertiary = textTertiary,
    )
  }
}
